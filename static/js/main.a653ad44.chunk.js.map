{"version":3,"sources":["ApIKey.js","Assets/srk.jpg","Components/Layouts/Navbar.js","Components/Layouts/MyFooter.js","Components/Home/SearchForm.js","actions/searchActions.js","actions/types.js","Components/Home/Landing.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","props","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","src","require","alt","width","height","MyFooter","target","SearchForm","inputHandle","e","searchMovie","value","onSubmit","preventDefault","fetchMovies","text","style","display","justifyContent","alignItems","this","name","placeholder","onChange","Component","connect","state","movies","dispatch","payload","axios","get","then","response","data","Search","catch","error","console","log","Landing","initialState","loading","movie","combineReducers","action","middlewere","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","item","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a653ad44.chunk.js","sourcesContent":["module.exports = {\n    APIKey: \"c7f60907\"\n}","module.exports = __webpack_public_path__ + \"static/media/srk.d7dba178.jpg\";","import React from 'react'\nimport '../../CssFiles/HomePage.css'\n\nfunction Navbar(props) {\n\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">\n                <a className=\"navbar-brand text-warning\" href=\"#\">MoviesSeriesInfo</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\n                    <div></div>\n                    <ul className=\"navbar-nav mr-auto \">\n                        <li className=\"nav-item active \">\n                            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"#\">About Us</a>\n                        </li>\n                        {/* <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle text-white\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                shivam\n        </a>\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                <a className=\"dropdown-item\" href=\"#\">Action</a>\n                                <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                                <div className=\"dropdown-divider\"></div>\n                                <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n                            </div>\n                        </li> */}\n\n                    </ul>\n\n                    <form className=\"form-inline my-2 my-lg-0\">\n                        <img src={require('../../Assets/srk.jpg')} alt=\"Avatar\" className=\"avatar rounded-circle \" width=\"40\" height=\"40\" />\n                    </form>\n                </div>\n            </nav>\n\n        </div>\n    )\n}\n\nexport default Navbar","import React from 'react'\nfunction MyFooter() {\n    return (\n    <div>\n        <div className=\"row fixed-bottom\">\n            <div className=\"col-md-12\">\n                <div className=\"footer p-3 mt-4 text-center bg-dark text-warning\">\n                    Developed By:-\n                        <span className=\"text-warning font-weight-bold\">kapil asthana\n                        , using  ReactJs &amp; Redux along with external Movies APIs</span>\n                        &nbsp;&nbsp;<i className=\"fab fa-imdb\"></i>\n                    <a href=\"https://www.omdbapi.com\" target=\"blank\">\n                        &nbsp; OMDB APIs\n                            </a>\n                </div>\n\n            </div>\n        </div>\n\n    </div>\n    )\n}\n\nexport default MyFooter\n","import React, { Component } from 'react'\nimport '../../CssFiles/HomePage.css'\n\nimport {connect} from 'react-redux'\n\nimport {searchMovie,fetchMovies} from '../../actions/searchActions'\n\nexport class SearchForm extends Component {\n\n    inputHandle = e => {\n        this.props.searchMovie(e.target.value)\n    }\n\n    onSubmit = e => {\n\n        e.preventDefault()\n        this.props.fetchMovies(this.props.text)\n    }\n\n    render() {\n        return (\n            <div className=\"jumbotron jumbotron-fluid mt-10 text-center bg-dark border border-warning\">\n                <div className=\"container\">\n                    <h4 className=\"display-4 mb-3 text-warning\">\n                        <i className=\"fa fa-search\" /> search for a movie, TV series, Web Series...\n                </h4>\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <form id=\"searchForm\"\n                         style={{ width: \"50%\", alignItems: \"center\" }}\n                         onSubmit={this.onSubmit}\n                         >\n                            <input\n                                id=\"searchBox\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"searchText\"\n                                placeholder=\"Search Movies,TV and webSeries...\"\n                                onChange={this.inputHandle}\n                            />\n                            <button type=\"submit\" className=\"btn btn-primary mt-3\">Search</button>\n                        </form>\n\n                    </div>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state =>({\n    text: state.movies.text,\n    movies:state.movies.movies\n})\n\nexport default connect(\n    mapStateToProps,\n    {searchMovie,fetchMovies}\n    )(SearchForm)\n","import { SEARCH_MOVIE ,FETCH_MOVIE} from './types'\nimport axios from 'axios'\nimport {APIKey} from '../ApIKey'\nexport const searchMovie = text => dispatch => {\n    dispatch({\n        type: SEARCH_MOVIE,\n        payload: text\n    })\n}\n\nexport const fetchMovies = text => dispatch => {\n\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`).then((response)=>dispatch({\n        type:FETCH_MOVIE,\n        payload:response.data.Search\n    })).catch((error)=>{\n        console.log(\"getting error while fetching movie\",error);\n    })\n}","export const SEARCH_MOVIE = \"SEARCH_MOVIE\"\nexport const FETCH_MOVIE = \"FETCH_MOVIE\"","import React, { Component } from 'react'\nimport SearchForm from './SearchForm'\nimport { connect } from 'react-redux'\n\nexport class Landing extends Component {\n    render() {\n        return (\n            <div className=\"container mt-2 mb-5\">\n                <SearchForm />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n\n})\n\n\nexport default connect(mapStateToProps)(Landing)\n","import { SEARCH_MOVIE,FETCH_MOVIE } from '../actions/types'\n\n\nconst initialState = {\n    text: \"\",\n    movies: [],\n    loading: false,\n    movie: []\n}\n\n\nexport default function (state = initialState, action) {\n\n    switch (action.type) {\n        case SEARCH_MOVIE:\n            return {\n                ...state,\n                text: action.payload,\n                loading: false\n            }\n            case FETCH_MOVIE:\n            return {\n                ...state,\n                movies: action.payload,\n            }\n        default:\n            return state\n    }\n\n}","import {combineReducers} from 'redux'\nimport searchReducer from './searchReducer'\n\nexport default combineReducers({\n    movies:searchReducer\n})","import {createStore,applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly'\nimport rootReducer from './reducers'\nconst middlewere = [thunk]\nconst initialState = {}\n\nconst store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middlewere)))\n\nexport default store","import React from 'react';\nimport './App.css';\nimport Navbar from './Components/Layouts/Navbar'\nimport MyFooter from './Components/Layouts/MyFooter'\nimport Landing from './Components/Home/Landing'\nimport {Provider} from 'react-redux'\nimport store from './store'\nfunction App() {\n  return (\n    <Provider store = {store}>\n      <Navbar item=\"my navbar\" />\n      <Landing />\n      <MyFooter />\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}